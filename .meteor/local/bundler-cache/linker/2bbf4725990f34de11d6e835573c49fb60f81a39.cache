[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// Employee.jsx                                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Employee component - represents a single employee                   //\nEmployee = React.createClass({                                         // 2\n  displayName: \"Employee\",                                             //\n                                                                       //\n  propTypes: {                                                         // 3\n    // This component gets the task to display through a React prop.   //\n    // We can use propTypes to indicate it is required                 //\n    employee: React.PropTypes.object.isRequired                        // 6\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 9\n    return React.createElement(                                        // 10\n      \"li\",                                                            //\n      null,                                                            //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee._id                                        //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.first                                 //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.last                                  //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/Employee.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/Employee.jsx"],"names":[],"mappings":";;;;;;;;;AACA,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC3B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAEF,QAAM,cAAG;AACN,WACE;;;MACE;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG;OAAQ;MACvD;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;OAAQ;MAC9D;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;OAAQ;KAC1D,CACL;GACH;CACF,CAAC,CAAC,sE","file":"/Employee.jsx","sourcesContent":["// Employee component - represents a single employee \nEmployee = React.createClass({\n  propTypes: {\n    // This component gets the task to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n render() {\n    return (\n      <li>\n        <span className=\"text\">{this.props.employee._id}</span>\n        <span className=\"text\">{this.props.employee.name.first}</span>\n        <span className=\"text\">{this.props.employee.name.last}</span>\n      </li>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// inovate-employees-directory.jsx                                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Define a collection to hold our employees                           //\n                                                                       //\nEmployees = new Mongo.Collection(\"employees\");                         // 3\n                                                                       //\nif (Meteor.isClient) {                                                 // 5\n                                                                       //\n  // This code is executed on the client only                          //\n                                                                       //\n  Meteor.startup(function () {                                         // 9\n                                                                       //\n    // Use Meteor.startup to render the component after the page is ready\n                                                                       //\n    React.render(React.createElement(App, null), document.getElementById(\"render-target\"));\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/inovate-employees-directory.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/inovate-employees-directory.jsx"],"names":[],"mappings":";;;;;;;;;;AAEA,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;AAE9C,IAAI,MAAM,CAAC,QAAQ,EAAE;;;;AAInB,QAAM,CAAC,OAAO,CAAC,YAAY;;;;AAIzB,SAAK,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GAEjE,CAAC,CAAC;CAEJ,wE","file":"/inovate-employees-directory.jsx","sourcesContent":["// Define a collection to hold our employees\n\nEmployees = new Mongo.Collection(\"employees\");\n\nif (Meteor.isClient) {\n\n  // This code is executed on the client only\n\n  Meteor.startup(function () {\n\n    // Use Meteor.startup to render the component after the page is ready\n\n    React.render(<App />, document.getElementById(\"render-target\"));\n\n  });\n\n}\n\n"]}}]