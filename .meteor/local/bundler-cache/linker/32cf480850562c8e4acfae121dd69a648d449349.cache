[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n}).call(this);\n","servePath":"/client/template.EmployeesListView.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/template.EmployeesListView.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/client/template.EmployeesListView.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/App.jsx                                                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// App component - represents the whole app                            //\nApp = React.createClass({                                              // 2\n  displayName: \"App\",                                                  //\n                                                                       //\n  // This mixin makes the getMeteorData method work                    //\n  mixins: [ReactMeteorData],                                           // 5\n                                                                       //\n  // Loads items from the Tasks collection and puts them on this.data.tasks\n  getMeteorData: function () {                                         // 8\n    return {                                                           // 9\n      employees: Employees.find().fetch()                              // 10\n    };                                                                 //\n  },                                                                   //\n                                                                       //\n  renderEmployees: function () {                                       // 14\n    // Get tasks from this.data.employees                              //\n    return this.data.employees.map(function (task) {                   // 16\n      return React.createElement(Employee, { key: employee._id, employee: employee });\n    });                                                                //\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 21\n    return React.createElement(                                        // 22\n      \"div\",                                                           //\n      { className: \"container\" },                                      //\n      React.createElement(                                             //\n        \"ul\",                                                          //\n        null,                                                          //\n        this.renderEmployees()                                         //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/App.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/App.jsx"],"names":[],"mappings":";;;;;;;;;AACA,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;;;;AAGtB,QAAM,EAAE,CAAC,eAAe,CAAC;;;AAGzB,eAAa,cAAG;AACd,WAAO;AACL,eAAS,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;KACpC;GACF;;AAED,iBAAe,cAAG;;AAEhB,WAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,EAAK;AACvC,aAAO,oBAAC,QAAQ,IAAC,GAAG,EAAE,QAAQ,CAAC,GAAI,EAAC,QAAQ,EAAE,QAAS,GAAE,CAAC;KAC3D,CAAC,CAAC;GACJ;;AAED,QAAM,cAAG;AACP,WACE;;QAAK,SAAS,EAAC,WAAW;MACxB;;;QACG,IAAI,CAAC,eAAe,EAAE;OACpB;KACD,CACN;GACH;CACF,CAAC,CAAC,sE","file":"/client/App.jsx","sourcesContent":["// App component - represents the whole app\nApp = React.createClass({\n \n  // This mixin makes the getMeteorData method work\n  mixins: [ReactMeteorData],\n \n  // Loads items from the Tasks collection and puts them on this.data.tasks\n  getMeteorData() {\n    return {\n      employees: Employees.find().fetch()\n    }\n  },\n \n  renderEmployees() {\n    // Get tasks from this.data.employees\n    return this.data.employees.map((task) => {\n      return <Employee key={employee._id} employee={employee}/>;\n    });\n  },\n \n  render() {\n    return (\n      <div className=\"container\">\n        <ul>\n          {this.renderEmployees()}\n        </ul>\n      </div>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/Employee.jsx                                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Employee component - represents a single employee                   //\nEmployee = React.createClass({                                         // 2\n  displayName: \"Employee\",                                             //\n                                                                       //\n  propTypes: {                                                         // 3\n    // This component gets the task to display through a React prop.   //\n    // We can use propTypes to indicate it is required                 //\n    employee: React.PropTypes.object.isRequired                        // 6\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 9\n    return React.createElement(                                        // 10\n      \"li\",                                                            //\n      null,                                                            //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee._id                                        //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.first                                 //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.last                                  //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/Employee.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/Employee.jsx"],"names":[],"mappings":";;;;;;;;;AACA,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC3B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAEF,QAAM,cAAG;AACN,WACE;;;MACE;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG;OAAQ;MACvD;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;OAAQ;MAC9D;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;OAAQ;KAC1D,CACL;GACH;CACF,CAAC,CAAC,sE","file":"/client/Employee.jsx","sourcesContent":["// Employee component - represents a single employee \nEmployee = React.createClass({\n  propTypes: {\n    // This component gets the task to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n render() {\n    return (\n      <li>\n        <span className=\"text\">{this.props.employee._id}</span>\n        <span className=\"text\">{this.props.employee.name.first}</span>\n        <span className=\"text\">{this.props.employee.name.last}</span>\n      </li>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/inovate-employees-directory.jsx                              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.startup(function () {                                           // 1\n                                                                       //\n  // Use Meteor.startup to render the component after the page is ready\n                                                                       //\n  React.render(React.createElement(App, null), document.getElementById(\"render-target\"));\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/inovate-employees-directory.jsx","sourceMap":{"version":3,"sources":["/client/inovate-employees-directory.jsx"],"names":[],"mappings":";;;;;;;;AAAE,MAAM,CAAC,OAAO,CAAC,YAAY;;;;AAIzB,OAAK,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;CAEjE,CAAC,CAAC,sE","file":"/client/inovate-employees-directory.jsx","sourcesContent":["  Meteor.startup(function () {\n\n    // Use Meteor.startup to render the component after the page is ready\n\n    React.render(<App />, document.getElementById(\"render-target\"));\n\n  });"]}}]