[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n}).call(this);\n","servePath":"/template.inovate-employees-directory.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/template.inovate-employees-directory.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/template.inovate-employees-directory.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// App.jsx                                                             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// App component - represents the whole app                            //\nApp = React.createClass({                                              // 2\n  displayName: \"App\",                                                  //\n                                                                       //\n  // This mixin makes the getMeteorData method work                    //\n  mixins: [ReactMeteorData],                                           // 5\n                                                                       //\n  // Loads items from the Tasks collection and puts them on this.data.tasks\n  getMeteorData: function () {                                         // 8\n    return {                                                           // 9\n      employees: Employees.find().fetch()                              // 10\n    };                                                                 //\n  },                                                                   //\n                                                                       //\n  renderEmployeeList: function () {                                    // 14\n    // Get tasks from this.data.employees                              //\n    return this.data.employees.map(function (employee) {               // 16\n      return React.createElement(EmployeeList, { key: employee._id, employee: employee });\n    });                                                                //\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 21\n    return React.createElement(                                        // 22\n      \"div\",                                                           //\n      { className: \"container\" },                                      //\n      React.createElement(                                             //\n        \"ul\",                                                          //\n        { \"class\": \"list-group\", id: \"contact-list\" },                 //\n        this.renderEmployeeList()                                      //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/App.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/App.jsx"],"names":[],"mappings":";;;;;;;;;AACA,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;;;;AAGtB,QAAM,EAAE,CAAC,eAAe,CAAC;;;AAGzB,eAAa,cAAG;AACd,WAAO;AACL,eAAS,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;KACpC;GACF;;AAED,oBAAkB,cAAG;;AAEnB,WAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAK;AAC3C,aAAO,oBAAC,YAAY,IAAC,GAAG,EAAE,QAAQ,CAAC,GAAI,EAAC,QAAQ,EAAE,QAAS,GAAE,CAAC;KAC/D,CAAC,CAAC;GACJ;;AAED,QAAM,cAAG;AACP,WACE;;QAAK,SAAS,EAAC,WAAW;MACxB;;UAAI,SAAM,YAAY,EAAC,EAAE,EAAC,cAAc;QACrC,IAAI,CAAC,kBAAkB,EAAE;OACvB;KACD,CACN;GACH;CACF,CAAC,CAAC,sE","file":"/App.jsx","sourcesContent":["// App component - represents the whole app\nApp = React.createClass({\n \n  // This mixin makes the getMeteorData method work\n  mixins: [ReactMeteorData],\n \n  // Loads items from the Tasks collection and puts them on this.data.tasks\n  getMeteorData() {\n    return {\n      employees: Employees.find().fetch()\n    }\n  },\n \n  renderEmployeeList() {\n    // Get tasks from this.data.employees\n    return this.data.employees.map((employee) => {\n      return <EmployeeList key={employee._id} employee={employee}/>;\n    });\n  },\n \n  render() {\n    return (\n      <div className=\"container\">\n        <ul class=\"list-group\" id=\"contact-list\">\n          {this.renderEmployeeList()}\n        </ul>\n      </div>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// EmployeeList.jsx                                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// We can use propTypes to indicate it is required                     //\n// Employee component - represents a single employee                   //\nEmployeeList = React.createClass({                                     // 3\n  displayName: \"EmployeeList\",                                         //\n                                                                       //\n  propTypes: {                                                         // 4\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required                 //\n    employee: React.PropTypes.object.isRequired                        // 7\n  },                                                                   //\n                                                                       //\n  renderEmployeeView: function () {                                    // 10\n    // Render the single employee view form combo component            //\n    React.render(React.createElement(EmployeeView, { employee: this.props.employee }), document.getElementById(\"render-target\"));\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 15\n    return React.createElement(                                        // 16\n      \"li\",                                                            //\n      { className: \"list-group-item\", onClick: this.renderEmployeeView },\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-xs-12 col-sm-2\" },                           //\n        React.createElement(\"img\", { src: this.props.employee.picture.toString(), alt: this.props.employee.name.first + \" \" + this.props.employee.name.last, className: \"img-responsive img-circle\" })\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-xs-12 col-sm-10\" },                          //\n        React.createElement(                                           //\n          \"h3\",                                                        //\n          null,                                                        //\n          React.createElement(                                         //\n            \"span\",                                                    //\n            { className: \"name\" },                                     //\n            this.props.employee.name.first,                            //\n            \" \",                                                       //\n            this.props.employee.name.last                              //\n          )                                                            //\n        )                                                              //\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-xs-12 col-sm-10\" },                          //\n        React.createElement(                                           //\n          \"h4\",                                                        //\n          null,                                                        //\n          React.createElement(                                         //\n            \"span\",                                                    //\n            { className: \"text\" },                                     //\n            this.props.employee.department                             //\n          )                                                            //\n        )                                                              //\n      ),                                                               //\n      React.createElement(\"div\", { className: \"clearfix\" })            //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/EmployeeList.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/EmployeeList.jsx"],"names":[],"mappings":";;;;;;;;;;AAEA,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAED,oBAAkB,cAAG;;AAEnB,SAAK,CAAC,MAAM,CAAC,oBAAC,YAAY,IAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS,GAAE,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GACxG;;AAEF,QAAM,cAAG;AACF,WACF;;QAAI,SAAS,EAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAmB;MACpD;;UAAK,SAAS,EAAC,oBAAoB;QAC/B,6BAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAG,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAK,EAAC,SAAS,EAAC,2BAA2B,GAAE;OACjK;MACN;;UAAK,SAAS,EAAC,qBAAqB;QAChC;;;UAAI;;cAAM,SAAS,EAAC,MAAM;YAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;;YAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;WAAQ;SAAK;OACrG;MACN;;UAAK,SAAS,EAAC,qBAAqB;QAChC;;;UAAI;;cAAM,SAAS,EAAC,MAAM;YAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU;WAAQ;SAAK;OACrE;MACN,6BAAK,SAAS,EAAC,UAAU,GAAO;KACzC,CACL;GACH;CACF,CAAC,CAAC,sE","file":"/EmployeeList.jsx","sourcesContent":["// We can use propTypes to indicate it is required\n// Employee component - represents a single employee \nEmployeeList = React.createClass({\n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n  renderEmployeeView() {\n    // Render the single employee view form combo component\n    React.render(<EmployeeView employee={this.props.employee}/>, document.getElementById(\"render-target\"));\n  },\n\n render() {\n        return (\n      <li className=\"list-group-item\"  onClick={this.renderEmployeeView}>\n                    <div className=\"col-xs-12 col-sm-2\">\n                        <img src={this.props.employee.picture.toString()} alt={this.props.employee.name.first + \" \"+ this.props.employee.name.last} className=\"img-responsive img-circle\"/>\n                    </div>\n                    <div className=\"col-xs-12 col-sm-10\">\n                        <h3><span className=\"name\">{this.props.employee.name.first} {this.props.employee.name.last}</span></h3>\n                    </div>\n                    <div className=\"col-xs-12 col-sm-10\">\n                        <h4><span className=\"text\">{this.props.employee.department}</span></h4>\n                    </div>\n                    <div className=\"clearfix\"></div>\n      </li>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// EmployeeView.jsx                                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nEmployeeView = React.createClass({                                     // 1\n  displayName: \"EmployeeView\",                                         //\n                                                                       //\n  propTypes: {                                                         // 2\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required                 //\n    employee: React.PropTypes.object.isRequired                        // 5\n  },                                                                   //\n                                                                       //\n  handleChange: function (event) {                                     // 8\n    var originalValue = this.props.employee.name.first;                // 9\n    var inputValue = event.target.value;                               // 10\n    var inputName = event.target.name;                                 // 11\n                                                                       //\n    if (originalValue != inputValue) {                                 // 13\n      Employees.update(this.props.employee._id, {                      // 14\n        $set: { \"name.first\": inputValue },                            // 15\n        $set: { \"name.last\": inputValue }                              // 16\n      });                                                              //\n    }                                                                  //\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 21\n    return React.createElement(                                        // 22\n      \"div\",                                                           //\n      { className: \"form-group\" },                                     //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-xs-12 col-sm-2\" },                           //\n        React.createElement(\"img\", { src: this.props.employee.picture.toString(), alt: this.props.employee.name.first + \" \" + this.props.employee.name.last, className: \"img-responsive img-circle\" })\n      ),                                                               //\n      React.createElement(                                             //\n        \"label\",                                                       //\n        { className: \"col-md-4 control-label\", \"for\": \"firstName\" },   //\n        \"First Name\"                                                   //\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-md-8\" },                                     //\n        React.createElement(\"input\", { id: \"firstName\",                //\n          ref: \"firstName\",                                            // 30\n          name: \"name.first\",                                          // 31\n          type: \"text\",                                                // 32\n          className: \"form-control input-md\",                          // 33\n          onBlur: this.handleChange,                                   // 34\n          defaultValue: this.props.employee.name.first })              // 35\n      ),                                                               //\n      React.createElement(                                             //\n        \"label\",                                                       //\n        { className: \"col-md-4 control-label\", \"for\": \"lastName\" },    //\n        \"Last Name\"                                                    //\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-md-8\" },                                     //\n        React.createElement(\"input\", { id: \"lastName\",                 //\n          ref: \"lastName\",                                             // 40\n          name: \"last\",                                                // 41\n          type: \"text\",                                                // 42\n          className: \"form-control input-md\",                          // 43\n          onBlur: this.handleChange,                                   // 44\n          defaultValue: this.props.employee.name.last })               // 45\n      ),                                                               //\n      React.createElement(                                             //\n        \"label\",                                                       //\n        { className: \"col-md-4 control-label\", \"for\": \"email\" },       //\n        \"Email\"                                                        //\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-md-8\" },                                     //\n        React.createElement(\"input\", { id: \"email\",                    //\n          ref: \"email\",                                                // 50\n          name: \"email\",                                               // 51\n          type: \"email\",                                               // 52\n          className: \"form-control input-md\",                          // 53\n          onBlur: this.handleChange,                                   // 54\n          defaultValue: this.props.employee.email })                   // 55\n      ),                                                               //\n      React.createElement(                                             //\n        \"label\",                                                       //\n        { className: \"col-md-4 control-label\", \"for\": \"phone\" },       //\n        \"Phone\"                                                        //\n      ),                                                               //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"col-md-8\" },                                     //\n        React.createElement(\"input\", { id: \"phone\",                    //\n          ref: \"phone\",                                                // 60\n          name: \"phone\",                                               // 61\n          type: \"phone\",                                               // 62\n          className: \"form-control input-md\",                          // 63\n          defaultValue: this.props.employee.phone })                   // 64\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/EmployeeView.jsx","sourceMap":{"version":3,"sources":["/EmployeeView.jsx"],"names":[],"mappings":";;;;;;;;AAAA,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAED,cAAY,EAAE,UAAS,KAAK,EAAE;AAC5B,QAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACnD,QAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACpC,QAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;;AAElC,QAAI,aAAa,IAAI,UAAU,EAAC;AAC9B,eAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;AACxC,YAAI,EAAC,EAAE,YAAY,EAAG,UAAU,EAAC;AACjC,YAAI,EAAC,EAAE,WAAW,EAAG,UAAU,EAAC;OACjC,CAAC,CAAC;KACJ;GACF;;AAEF,QAAM,cAAG;AACF,WACE;;QAAK,SAAS,EAAC,YAAY;MACvB;;UAAK,SAAS,EAAC,oBAAoB;QACjC,6BAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAG,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAK,EAAC,SAAS,EAAC,2BAA2B,GAAE;OAC/J;MACN;;UAAO,SAAS,EAAC,wBAAwB,EAAC,OAAI,WAAW;;OAAmB;MAC5E;;UAAK,SAAS,EAAC,UAAU;QACvB,+BAAO,EAAE,EAAC,WAAW;AACrB,aAAG,EAAC,WAAW;AACf,cAAI,EAAC,YAAY;AACjB,cAAI,EAAC,MAAM;AACX,mBAAS,EAAC,uBAAuB;AACjC,gBAAM,EAAE,IAAI,CAAC,YAAa;AAC1B,sBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAM,GAAE;OAC3C;MACN;;UAAO,SAAS,EAAC,wBAAwB,EAAC,OAAI,UAAU;;OAAkB;MAC1E;;UAAK,SAAS,EAAC,UAAU;QACvB,+BAAO,EAAE,EAAC,UAAU;AACpB,aAAG,EAAC,UAAU;AACd,cAAI,EAAC,MAAM;AACX,cAAI,EAAC,MAAM;AACX,mBAAS,EAAC,uBAAuB;AACjC,gBAAM,EAAE,IAAI,CAAC,YAAa;AAC1B,sBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAK,GAAE;OAC1C;MACN;;UAAO,SAAS,EAAC,wBAAwB,EAAC,OAAI,OAAO;;OAAc;MACnE;;UAAK,SAAS,EAAC,UAAU;QACvB,+BAAO,EAAE,EAAC,OAAO;AACjB,aAAG,EAAC,OAAO;AACX,cAAI,EAAC,OAAO;AACZ,cAAI,EAAC,OAAO;AACZ,mBAAS,EAAC,uBAAuB;AACjC,gBAAM,EAAE,IAAI,CAAC,YAAa;AAC1B,sBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAM,GAAE;OACtC;MACN;;UAAO,SAAS,EAAC,wBAAwB,EAAC,OAAI,OAAO;;OAAc;MACnE;;UAAK,SAAS,EAAC,UAAU;QACvB,+BAAO,EAAE,EAAC,OAAO;AACjB,aAAG,EAAC,OAAO;AACX,cAAI,EAAC,OAAO;AACZ,cAAI,EAAC,OAAO;AACZ,mBAAS,EAAC,uBAAuB;AACjC,sBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAM,GAAE;OACtC;KACJ,CACV;GACH;CACF,CAAC,CAAC,sE","file":"/EmployeeView.jsx","sourcesContent":["EmployeeView = React.createClass({\n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n  handleChange: function(event) {\n    var originalValue = this.props.employee.name.first;\n    var inputValue = event.target.value;\n    var inputName = event.target.name;\n\n    if (originalValue != inputValue){\n      Employees.update(this.props.employee._id, {\n        $set:{ \"name.first\" : inputValue},\n        $set:{ \"name.last\" : inputValue}\n      });\n    }\n  },\n\n render() {\n        return ( \n          <div className=\"form-group\">\n              <div className=\"col-xs-12 col-sm-2\">\n                <img src={this.props.employee.picture.toString()} alt={this.props.employee.name.first + \" \"+ this.props.employee.name.last} className=\"img-responsive img-circle\"/>\n              </div>  \n              <label className=\"col-md-4 control-label\" for=\"firstName\">First Name</label>  \n              <div className=\"col-md-8\">\n                <input id=\"firstName\" \n                ref=\"firstName\" \n                name=\"name.first\" \n                type=\"text\" \n                className=\"form-control input-md\"\n                onBlur={this.handleChange}\n                defaultValue={this.props.employee.name.first}/>   \n              </div>\n              <label className=\"col-md-4 control-label\" for=\"lastName\">Last Name</label>  \n              <div className=\"col-md-8\">\n                <input id=\"lastName\" \n                ref=\"lastName\" \n                name=\"last\" \n                type=\"text\" \n                className=\"form-control input-md\"\n                onBlur={this.handleChange}\n                defaultValue={this.props.employee.name.last}/>   \n              </div>\n              <label className=\"col-md-4 control-label\" for=\"email\">Email</label>  \n              <div className=\"col-md-8\">\n                <input id=\"email\" \n                ref=\"email\" \n                name=\"email\" \n                type=\"email\" \n                className=\"form-control input-md\"\n                onBlur={this.handleChange}\n                defaultValue={this.props.employee.email}/>   \n              </div>\n              <label className=\"col-md-4 control-label\" for=\"phone\">Phone</label>  \n              <div className=\"col-md-8\">\n                <input id=\"phone\" \n                ref=\"phone\" \n                name=\"phone\" \n                type=\"phone\" \n                className=\"form-control input-md\"\n                defaultValue={this.props.employee.phone}/>   \n              </div>\n          </div>\n    );\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// inovate-employees-directory.jsx                                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Define a collection to hold our employees                           //\n                                                                       //\nEmployees = new Mongo.Collection(\"employees\");                         // 3\n                                                                       //\nif (Meteor.isClient) {                                                 // 5\n                                                                       //\n  // This code is executed on the client only                          //\n                                                                       //\n  Meteor.startup(function () {                                         // 9\n                                                                       //\n    // Use Meteor.startup to render the component after the page is ready\n                                                                       //\n    React.render(React.createElement(App, null), document.getElementById(\"render-target\"));\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/inovate-employees-directory.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/inovate-employees-directory.jsx"],"names":[],"mappings":";;;;;;;;;;AAEA,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;AAE9C,IAAI,MAAM,CAAC,QAAQ,EAAE;;;;AAInB,QAAM,CAAC,OAAO,CAAC,YAAY;;;;AAIzB,SAAK,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GAEjE,CAAC,CAAC;CAEJ,wE","file":"/inovate-employees-directory.jsx","sourcesContent":["// Define a collection to hold our employees\n\nEmployees = new Mongo.Collection(\"employees\");\n\nif (Meteor.isClient) {\n\n  // This code is executed on the client only\n\n  Meteor.startup(function () {\n\n    // Use Meteor.startup to render the component after the page is ready\n\n    React.render(<App />, document.getElementById(\"render-target\"));\n\n  });\n\n}\n\n"]}}]