[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n}).call(this);\n","servePath":"/client/template.EmployeesListView.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/template.EmployeesListView.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/client/template.EmployeesListView.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/Employee.jsx                                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// Employee component - represents a single employee                   //\nEmployee = React.createClass({                                         // 2\n  displayName: \"Employee\",                                             //\n                                                                       //\n  propTypes: {                                                         // 3\n    // This component gets the task to display through a React prop.   //\n    // We can use propTypes to indicate it is required                 //\n    employee: React.PropTypes.object.isRequired                        // 6\n  },                                                                   //\n                                                                       //\n  render: function () {                                                // 9\n    return React.createElement(                                        // 10\n      \"li\",                                                            //\n      null,                                                            //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee._id                                        //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.first                                 //\n      ),                                                               //\n      React.createElement(                                             //\n        \"span\",                                                        //\n        { className: \"text\" },                                         //\n        this.props.employee.name.last                                  //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/Employee.jsx","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/Employee.jsx"],"names":[],"mappings":";;;;;;;;;AACA,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC3B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAEF,QAAM,cAAG;AACN,WACE;;;MACE;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG;OAAQ;MACvD;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;OAAQ;MAC9D;;UAAM,SAAS,EAAC,MAAM;QAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;OAAQ;KAC1D,CACL;GACH;CACF,CAAC,CAAC,sE","file":"/client/Employee.jsx","sourcesContent":["// Employee component - represents a single employee \nEmployee = React.createClass({\n  propTypes: {\n    // This component gets the task to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n render() {\n    return (\n      <li>\n        <span className=\"text\">{this.props.employee._id}</span>\n        <span className=\"text\">{this.props.employee.name.first}</span>\n        <span className=\"text\">{this.props.employee.name.last}</span>\n      </li>\n    );\n  }\n});"]}}]