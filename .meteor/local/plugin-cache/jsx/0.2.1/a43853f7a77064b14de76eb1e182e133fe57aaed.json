{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"EmployeeView = React.createClass({\n  displayName: \"EmployeeView\",\n\n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n  handleChange: function (event) {\n    var originalValue = this.props.employee.name.first;\n    var inputValue = event.target.value;\n    var inputName = event.target.name;\n\n    if (originalValue != inputValue) {\n      Employees.update(this.props.employee._id, {\n        $set: { \"name.first\": inputValue, \"name.last\": inputValue }\n      });\n    }\n  },\n\n  render: function () {\n    return React.createElement(\n      \"div\",\n      { className: \"navbar navbar-default\" },\n      React.createElement(\n        \"div\",\n        { className: \"navbar-header\" },\n        React.createElement(\"img\", { alt: \"Innovate\", className: \"img-responsive pull-left\", height: \"10%\", width: \"10%\", src: \"https://s3.amazonaws.com/itmi-web-resources/images/assessment/logo.svg\" }),\n        React.createElement(\n          \"button\",\n          { type: \"submit\", onClick: this.handleBack, className: \"btn btn-default pull-left\" },\n          \"Back\"\n        ),\n        React.createElement(\n          \"button\",\n          { type: \"submit\", onClick: this.handleChange, className: \"btn btn-default pull-right\" },\n          \"Save\"\n        )\n      )\n    );\n  }\n});","ast":null,"map":{"version":3,"sources":["/EmployeeView.jsx"],"names":[],"mappings":"AAAA,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,WAAS,EAAE;;;AAGT,YAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC5C;;AAED,cAAY,EAAE,UAAS,KAAK,EAAE;AAC5B,QAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACnD,QAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACpC,QAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;;AAElC,QAAI,aAAa,IAAI,UAAU,EAAC;AAC9B,eAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;AACxC,YAAI,EAAC,EAAE,YAAY,EAAG,UAAU,EAAE,WAAW,EAAG,UAAU,EAAC;OAC5D,CAAC,CAAC;KACJ;GACF;;AAEF,QAAM,EAAA,YAAG;AACF,WACE;;QAAK,SAAS,EAAC,uBAAuB;MACpC;;UAAK,SAAS,EAAC,eAAe;QAC1B,6BAAK,GAAG,EAAC,UAAU,EAAC,SAAS,EAAC,0BAA0B,EAAC,MAAM,EAAE,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,wEAAwE,GAAO;QAChK;;YAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,AAAC,EAAC,SAAS,EAAC,2BAA2B;;SAAc;QACnG;;YAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,AAAC,EAAC,SAAS,EAAC,4BAA4B;;SAAc;OAC1G;KACF,CACJ;GACT;CACF,CAAC,CAAC","file":"/EmployeeView.jsx.map","sourcesContent":["EmployeeView = React.createClass({\n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employee: React.PropTypes.object.isRequired\n  },\n\n  handleChange: function(event) {\n    var originalValue = this.props.employee.name.first;\n    var inputValue = event.target.value;\n    var inputName = event.target.name;\n\n    if (originalValue != inputValue){\n      Employees.update(this.props.employee._id, {\n        $set:{ \"name.first\" : inputValue, \"name.last\" : inputValue},\n      });\n    }\n  },\n\n render() {\n        return (\n          <div className=\"navbar navbar-default\">\n            <div className=\"navbar-header\">\n                <img alt=\"Innovate\" className=\"img-responsive pull-left\" height =\"10%\" width=\"10%\" src=\"https://s3.amazonaws.com/itmi-web-resources/images/assessment/logo.svg\"></img>\n                      <button type=\"submit\" onClick={this.handleBack} className=\"btn btn-default pull-left\">Back</button>\n                      <button type=\"submit\" onClick={this.handleChange} className=\"btn btn-default pull-right\">Save</button>\n            </div>\n          </div>\n          );\n  }\n});"]},"hash":"a43853f7a77064b14de76eb1e182e133fe57aaed"}
