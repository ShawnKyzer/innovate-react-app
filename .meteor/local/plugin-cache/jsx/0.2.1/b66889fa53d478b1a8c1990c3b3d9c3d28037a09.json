{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"EmployeeFilteredView = React.createClass({\n  displayName: \"EmployeeFilteredView\",\n\n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employees: React.PropTypes.object.isRequired,\n    department: React.PropTypes.object.isRequired\n  },\n\n  renderEmployeeList: function () {\n    this.props.employees = Employees.find({ department: this.props.department }).fetch();\n    // Get employee from this.data.employees\n    return this.props.employees.map(function (employee) {\n      return React.createElement(EmployeeList, { key: employee._id, employee: employee });\n    });\n  },\n\n  getEmployeeFilteredView: function (event) {\n    var department = event.target.value;\n    var employees = this.props.employees;\n    if (department === \"All\") {\n      React.render(React.createElement(App, null), document.getElementById(\"render-target\"));\n    }\n    React.render(React.createElement(EmployeeFilteredView, { employees: employees, department: event.target.value }), document.getElementById(\"render-target\"));\n  },\n\n  createNewUser: function () {\n    React.render(React.createElement(EmployeeCreateNewView, null), document.getElementById(\"render-target\"));\n  },\n\n  render: function () {\n    return React.createElement(\n      \"div\",\n      { className: \"container-fluid\" },\n      React.createElement(\n        \"nav\",\n        { className: \"navbar navbar-default\" },\n        React.createElement(\n          \"div\",\n          { className: \"navbar-header\" },\n          React.createElement(\"img\", { alt: \"Innovate\", className: \"img-responsive pull-left\", height: \"30px\", width: \"30px\", src: \"https://s3.amazonaws.com/itmi-web-resources/images/assessment/logo.svg\" }),\n          React.createElement(\n            \"button\",\n            { type: \"submit\", onClick: this.createNewUser, className: \"btn btn-default pull-right\" },\n            \"New\"\n          )\n        )\n      ),\n      React.createElement(\n        \"ul\",\n        { className: \"list-group\", id: \"contact-list\" },\n        React.createElement(\n          \"div\",\n          { className: \"row\" },\n          React.createElement(\n            \"div\",\n            { className: \"col-sm-12\" },\n            React.createElement(\n              \"div\",\n              { className: \"form-group\" },\n              React.createElement(\n                \"label\",\n                { \"for\": \"department\" },\n                \"Department\"\n              ),\n              React.createElement(\n                \"select\",\n                { className: \"form-control\", id: \"department\", ref: \"department\", onChange: this.getEmployeeFilteredView, name: \"department\" },\n                React.createElement(\n                  \"option\",\n                  { value: \"All\" },\n                  \"All Departments\"\n                ),\n                React.createElement(\n                  \"option\",\n                  { value: \"Special Ops\" },\n                  \"Special Ops\"\n                ),\n                React.createElement(\n                  \"option\",\n                  { value: \"Covert Ops\" },\n                  \"Covert Ops\"\n                ),\n                React.createElement(\n                  \"option\",\n                  { value: \"R&D\" },\n                  \"Research and Development\"\n                ),\n                React.createElement(\n                  \"option\",\n                  { value: \"HR\" },\n                  \"HR\"\n                ),\n                React.createElement(\n                  \"option\",\n                  { value: \"Daycare Center\" },\n                  \"Daycare Center\"\n                )\n              )\n            )\n          )\n        ),\n        this.renderEmployeeList()\n      )\n    );\n  }\n});","ast":null,"map":{"version":3,"sources":["/EmployeeFilteredView.jsx"],"names":[],"mappings":"AAAA,oBAAoB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEvC,WAAS,EAAE;;;AAGT,aAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AAC5C,cAAU,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;GAC9C;;AAED,oBAAkB,EAAA,YAAG;AACnB,QAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;;AAErF,WAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAK;AAC5C,aAAO,oBAAC,YAAY,IAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,AAAC,EAAC,QAAQ,EAAE,QAAQ,AAAC,GAAE,CAAC;KAC/D,CAAC,CAAC;GACJ;;AAED,yBAAuB,EAAA,UAAC,KAAK,EAAE;AAC7B,QAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACpC,QAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AACrC,QAAI,UAAU,KAAG,KAAK,EAAC;AACrB,WAAK,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAE,EAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;KAC/D;AACA,SAAK,CAAC,MAAM,CAAC,oBAAC,oBAAoB,IAAC,SAAS,EAAE,SAAS,AAAC,EAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,AAAC,GAAE,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GACxI;;AAEA,eAAa,EAAA,YAAG;AACd,SAAK,CAAC,MAAM,CAAC,oBAAC,qBAAqB,OAAE,EAAE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;GACnF;;AAED,QAAM,EAAA,YAAG;AACP,WACJ;;QAAK,SAAS,EAAC,iBAAiB;MAC1B;;UAAK,SAAS,EAAC,uBAAuB;QACpC;;YAAK,SAAS,EAAC,eAAe;UAC1B,6BAAK,GAAG,EAAC,UAAU,EAAC,SAAS,EAAC,0BAA0B,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,GAAG,EAAC,wEAAwE,GAAO;UACjK;;cAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,AAAC,EAAC,SAAS,EAAC,4BAA4B;;WAAa;SAC1G;OACA;MACN;;UAAI,SAAS,EAAC,YAAY,EAAC,EAAE,EAAC,cAAc;QACpC;;YAAK,SAAS,EAAC,KAAK;UACxB;;cAAK,SAAS,EAAC,WAAW;YACtB;;gBAAK,SAAS,EAAC,YAAY;cACvB;;kBAAO,OAAI,YAAY;;eAAmB;cAC1C;;kBAAQ,SAAS,EAAC,cAAc,EAAC,EAAE,EAAC,YAAY,EAAC,GAAG,EAAC,YAAY,EAAC,QAAQ,EAAE,IAAI,CAAC,uBAAuB,AAAC,EAAC,IAAI,EAAC,YAAY;gBACvH;;oBAAQ,KAAK,EAAC,KAAK;;iBAAyB;gBAC5C;;oBAAQ,KAAK,EAAC,aAAa;;iBAAqB;gBAChD;;oBAAQ,KAAK,EAAC,YAAY;;iBAAoB;gBAC9C;;oBAAQ,KAAK,EAAC,KAAK;;iBAAkC;gBACrD;;oBAAQ,KAAK,EAAC,IAAI;;iBAAY;gBAC9B;;oBAAQ,KAAK,EAAC,gBAAgB;;iBAAwB;eACjD;aACP;WACJ;SACJ;QACH,IAAI,CAAC,kBAAkB,EAAE;OACvB;KACD,CACN;GACH;CACF,CAAC,CAAC","file":"/EmployeeFilteredView.jsx.map","sourcesContent":["EmployeeFilteredView = React.createClass({\n \n  propTypes: {\n    // This component gets the employee to display through a React prop.\n    // We can use propTypes to indicate it is required\n    employees: React.PropTypes.object.isRequired,\n    department: React.PropTypes.object.isRequired\n  },\n\n  renderEmployeeList() {\n    this.props.employees = Employees.find({ department: this.props.department }).fetch();\n    // Get employee from this.data.employees\n    return this.props.employees.map((employee) => {\n      return <EmployeeList key={employee._id} employee={employee}/>;\n    });\n  },\n\n  getEmployeeFilteredView(event) {\n    var department = event.target.value;\n    var employees = this.props.employees;\n    if (department===\"All\"){\n      React.render(<App/>,document.getElementById(\"render-target\"));\n    }\n     React.render(<EmployeeFilteredView employees={employees} department={event.target.value}/>, document.getElementById(\"render-target\"));\n  },\n\n   createNewUser() {\n     React.render(<EmployeeCreateNewView/>, document.getElementById(\"render-target\"));\n  },\n\n  render() {\n    return (\n<div className=\"container-fluid\">\n      <nav className=\"navbar navbar-default\">\n        <div className=\"navbar-header\">\n            <img alt=\"Innovate\" className=\"img-responsive pull-left\" height=\"30px\" width=\"30px\" src=\"https://s3.amazonaws.com/itmi-web-resources/images/assessment/logo.svg\"></img>\n                  <button type=\"submit\" onClick={this.createNewUser} className=\"btn btn-default pull-right\">New</button>\n        </div>\n        </nav>\n        <ul className=\"list-group\" id=\"contact-list\">\n                <div className='row'>\n            <div className='col-sm-12'>\n                <div className='form-group'>\n                    <label for=\"department\">Department</label>\n                    <select className=\"form-control\" id=\"department\" ref=\"department\" onChange={this.getEmployeeFilteredView} name=\"department\">\n                        <option value=\"All\">All Departments</option>\n                        <option value=\"Special Ops\">Special Ops</option>\n                        <option value=\"Covert Ops\">Covert Ops</option>\n                        <option value=\"R&D\">Research and Development</option>\n                        <option value=\"HR\">HR</option>\n                        <option value=\"Daycare Center\">Daycare Center</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n          {this.renderEmployeeList()}\n        </ul>\n      </div>\n    );\n  }\n});"]},"hash":"b66889fa53d478b1a8c1990c3b3d9c3d28037a09"}
